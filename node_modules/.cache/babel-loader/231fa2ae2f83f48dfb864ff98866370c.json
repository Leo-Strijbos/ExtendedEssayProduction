{"ast":null,"code":"var _jsxFileName = \"/Users/leostrijbos/Desktop/Files/School/IB Computer Science/compiler/src/main.js\";\nimport React from \"react\";\nimport translate from \"./files/translate\";\nimport \"./App.css\";\nimport AccountDropdown from \"./dropdown.jsx\";\nimport Pink from \"./img/pink.png\";\nimport Green from \"./img/green.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      textAreaValue: \"\",\n      run: false,\n      output: null,\n      error: null,\n      isOpen: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.run = this.run.bind(this);\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n    this.closeDropdown = this.closeDropdown.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      textAreaValue: event.target.value\n    });\n  }\n\n  run() {\n    let code = this.state.textAreaValue;\n    console.log(code); // Turning this into a function\n\n    code = \"function jsfjdnfs() {\\n let jsdfksdj=[]\\n\" + code + \"\\n return jsdfksdj\\n} \\njsfjdnfs()\";\n    let js = translate(code);\n    console.log(js); // Running string\n\n    try {\n      let out = eval(js);\n      let outp = \"\";\n\n      for (let q = 0; q < out.length; q++) {\n        outp = outp + out[q].toString() + \"\\n\";\n      }\n\n      this.setState({\n        error: null\n      });\n      this.setState({\n        output: outp\n      });\n    } catch (error) {\n      console.log(error);\n      let err = error.name;\n      console.log(err);\n      this.setState({\n        output: null\n      });\n\n      if (err == \"ReferenceError\") {\n        this.setState({\n          error: \"Error: \" + error.message.toString() + \". \\nHint: you may have to write 'let' the first time that you define a variable. eg. 'let x = 3'\" + \" \\nAlso, make sure to take a look at the guides if you need help!\"\n        }); //Error: varmake sure to write 'let' the first time that you define a variable. \\neg. 'let x = 3'\n      } else if (err == \"SyntaxError\") {\n        let m = error.message;\n\n        if (m.indexOf(\"end of input\") != -1) {\n          this.setState({\n            error: \"Error: remember to end if statements, loops and functions with 'end'.\" + \" \\nMake sure to take a look at the guides if you need help!\"\n          });\n        } else {\n          this.setState({\n            error: \"Error: \" + error.message.toString() + \" \\nMake sure to take a look at the guides if you need help!\"\n          });\n        }\n      } else {\n        this.setState({\n          error: \"Error: \" + error.message.toString() + \" \\nMake sure to take a look at the guides if you need help!\"\n        });\n      }\n    }\n  }\n\n  toggleDropdown() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  closeDropdown() {\n    this.setState({\n      isOpen: false\n    });\n  }\n\n  guide(code) {\n    this.setState({\n      textAreaValue: code\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen bg-black bg-opacity-85\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation flex p-5 bg-gray-900 bg-opacity-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Green,\n          alt: \"\",\n          className: \"logo\",\n          className: \"h-16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-96 flex-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: this.state.parentClass,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.toggleDropdown,\n              class: \"relative z-10 block border-2 bg-gray-500 rounded-lg border-gray-500 bg-opacity-70 text-white overflow-hidden focus:outline-none focus:font-bold px-3 py-1 hover:bg-opacity-50 mt-3 mr-8\",\n              children: [\"Guides \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs\",\n                children: \"\\u25BC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: this.state.isOpen ? ' cursor-default bg-black opacity-50 fixed inset-0 w-full h-full' : 'hidden',\n              onClick: this.closeDropdown,\n              tabIndex: \"-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: this.state.isOpen ? 'absolute right-0 mt-2 w-48 bg-white rounded-lg py-2 shadow-xl' : 'hidden',\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"block px-4 py-2 text-gray-800 hover:text-green-500\",\n                onClick: () => this.guide(\"// Finding the sum of two variables\\n\\nlet a = 1\\nlet b = 2\\n\\noutput(a+b)\"),\n                children: \"Variables\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"block px-4 py-2 text-gray-800 hover:text-green-500 hover:font-bold\",\n                onClick: () => this.guide('// Implementing basic logic\\n\\nlet a = 5\\n\\nif a = 5 then\\n\toutput(\"a is equal to \"+a.toString())\\nend if\\n\\nif not (a = 6) then \\n    output(\"a is not equal to 6\")\\nend if\\n\\nif a > 2 then\\n    output(\"a is greater than 2\")\\nend if\\n\\nif not (a > 10) then \\n    output(\"a is not greater than 10\")\\nend if\\n\\nif (a > 10) or (a>3) then\\n\\    output(\"a is greater than 10 or a is greater than 3\")\\nend if\\n\\nif (a>3) and (a<10) then\\n    output(\"a is greater than 3 and less than 10\")\\nend if'),\n                children: \"Logic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                href: \"#\",\n                class: \"block px-4 py-2 text-gray-800 hover:text-green-500 hover:font-bold\",\n                onClick: () => this.guide('// What Hogwarts house do you belong to?\\n\\nlet house = \"Hufflepuff\"\\n\\nif house = \"Gryffindor\" then\\n    output \"Gryffindor\"\\nelse if house = \"Slytherin\" then\\n    output \"Slytherin\"\\nelse if house = \"Ravenclaw\" then\\n    output \"Ravenclaw\"\\nelse  then\\n    output \"Hufflepuff\"\\nend if'),\n                children: \"If and Else\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                href: \"#\",\n                class: \"block px-4 py-2 text-gray-800 hover:text-green-500 hover:font-bold\",\n                onClick: () => this.guide(\"// Finding 10! (factorial)\\n\\nlet a = 1\\n\\nloop i from 1 to 10\\n    a = a*i\\nend loop\\n\\noutput a\"),\n                children: \"Loops\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                href: \"#\",\n                class: \"block px-4 py-2 text-gray-800 hover:text-green-500 hover:font-bold\",\n                onClick: () => this.guide('// Using modulus\\n\\nlet a = 17\\nif (a mod 2) = 1 then\\n    output(\"a is odd\")\\nelse then\\n    output(\"a is even\")\\nend if\\n\\n// Using div\\n\\nlet b = 96\\nlet c = 15\\nlet quotient = Math.floor(b/c)\\noutput(\"96 div is \"+quotient.toString())'),\n                children: \"Mod and Div\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"border-green-500 border-2 hover:bg-transparent bg-green-500 py-3 px-8 rounded-full font-bold text-white hover:text-green-500 outline-none\",\n          onClick: this.run,\n          children: \"Run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"body-div flex body-class bg-gray-900 bg-opacity-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: this.state.textAreaValue,\n          onChange: this.handleChange,\n          placeholder: \"// Enter your pseudocode here:\",\n          className: \"mx-10 my-16 flex-1 bg-gray-900 p-5 text-white outline-none leading-relaxed\",\n          onKeyDown: e => {\n            if (e.key === 'Tab' && !e.shiftKey) {\n              document.execCommand('insertText', false, \"\\t\");\n              e.preventDefault();\n              return false;\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 mx-10 my-16 bg-gray-900 p-5 text-white\",\n          children: [this.state.output != null ? /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: this.state.output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 59\n          }, this) : null, this.state.error != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-500 break-words\",\n            children: this.state.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 58\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main; // Still to do:\n// Logo\n// Implementation of function\n// Error checking\n// Sample list","map":{"version":3,"sources":["/Users/leostrijbos/Desktop/Files/School/IB Computer Science/compiler/src/main.js"],"names":["React","translate","AccountDropdown","Pink","Green","Main","Component","constructor","state","textAreaValue","run","output","error","isOpen","handleChange","bind","toggleDropdown","closeDropdown","event","setState","target","value","code","console","log","js","out","eval","outp","q","length","toString","err","name","message","m","indexOf","guide","render","parentClass","e","key","shiftKey","document","execCommand","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport translate from \"./files/translate\";\nimport \"./App.css\"\nimport AccountDropdown from \"./dropdown.jsx\";\nimport Pink from \"./img/pink.png\"\nimport Green from \"./img/green.png\"\n\nclass Main extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            textAreaValue: \"\",\n            run: false,\n            output: null,\n            error:null,\n            isOpen: false,\n\n\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.run = this.run.bind(this)\n        this.toggleDropdown = this.toggleDropdown.bind(this);\n\t\tthis.closeDropdown = this.closeDropdown.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ textAreaValue: event.target.value });\n    }\n\n    run() {\n        let code = this.state.textAreaValue\n        console.log(code)\n\n        // Turning this into a function\n        code = \"function jsfjdnfs() {\\n let jsdfksdj=[]\\n\"+code+\"\\n return jsdfksdj\\n} \\njsfjdnfs()\"\n\n        let js = translate(code)\n        console.log(js)\n\n        // Running string\n        try {\n            let out = eval(js)\n            \n            let outp = \"\"\n            for (let q=0; q<out.length;q++) {\n                outp = outp+out[q].toString()+\"\\n\"\n            }\n            this.setState({ error: null })\n            this.setState({ output: outp })\n        } catch (error) {\n            console.log(error)\n            let err = error.name\n            console.log(err)\n            this.setState({ output:null })\n            if (err==\"ReferenceError\") {\n                this.setState({ error: \"Error: \"+(error.message).toString()+\". \\nHint: you may have to write 'let' the first time that you define a variable. eg. 'let x = 3'\"+\" \\nAlso, make sure to take a look at the guides if you need help!\"});\n                //Error: varmake sure to write 'let' the first time that you define a variable. \\neg. 'let x = 3'\n            } else if (err==\"SyntaxError\") {\n                let m=error.message\n                if (m.indexOf(\"end of input\") != -1) {\n                    this.setState({ error:\"Error: remember to end if statements, loops and functions with 'end'.\"+\" \\nMake sure to take a look at the guides if you need help!\"})\n                } else {\n                    this.setState({ error:\"Error: \"+(error.message).toString()+\" \\nMake sure to take a look at the guides if you need help!\"})\n                }\n                \n            } else {\n                this.setState({ error:\"Error: \"+(error.message).toString()+\" \\nMake sure to take a look at the guides if you need help!\"})\n            }\n        }\n        \n\n    }\n\n    toggleDropdown() {\n\t\tthis.setState({ isOpen: !this.state.isOpen });\n\t}\n\n\tcloseDropdown() {\n\t\tthis.setState({ isOpen: false });\n\t}\n\n    guide(code) {\n        this.setState({ textAreaValue:code})\n    }\n\n\n    render(){\n        return(\n            <div className=\"h-screen bg-black bg-opacity-85\"> \n                <div className=\"navigation flex p-5 bg-gray-900 bg-opacity-50\">\n                    <img src={Green} alt=\"\" className=\"logo\" className=\"h-16\"/>\n                    <div className=\"w-96 flex-1\"></div>\n                    <div class={this.state.parentClass}>\n\t\t\t\t<div class=\"relative\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={this.toggleDropdown}\n\t\t\t\t\t\tclass=\"relative z-10 block border-2 bg-gray-500 rounded-lg border-gray-500 bg-opacity-70 text-white overflow-hidden focus:outline-none focus:font-bold px-3 py-1 hover:bg-opacity-50 mt-3 mr-8\"\n\t\t\t\t\t>\n\t\t\t\t\t\tGuides <span className='text-xs'>▼</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass={\n\t\t\t\t\t\t\tthis.state.isOpen ? (\n\t\t\t\t\t\t\t\t' cursor-default bg-black opacity-50 fixed inset-0 w-full h-full'\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'hidden'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={this.closeDropdown}\n\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass={\n\t\t\t\t\t\t\tthis.state.isOpen ? (\n\t\t\t\t\t\t\t\t'absolute right-0 mt-2 w-48 bg-white rounded-lg py-2 shadow-xl'\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t'hidden'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button class=\"block px-4 py-2 text-gray-800 hover:text-green-500\"\n                        onClick={() => this.guide(\"// Finding the sum of two variables\\n\\nlet a = 1\\nlet b = 2\\n\\noutput(a+b)\")}>\n\t\t\t\t\t\t\tVariables\n\t\t\t\t\t\t</button>\n                        <button class=\"block px-4 py-2 text-gray-800 hover:text-green-500 hover:font-bold\"\n                        onClick={() => this.guide('// Implementing basic logic\\n\\nlet a = 5\\n\\nif a = 5 then\\n\toutput(\"a is equal to \"+a.toString())\\nend if\\n\\nif not (a = 6) then \\n    output(\"a is not equal to 6\")\\nend if\\n\\nif a > 2 then\\n    output(\"a is greater than 2\")\\nend if\\n\\nif not (a > 10) then \\n    output(\"a is not greater than 10\")\\nend if\\n\\nif (a > 10) or (a>3) then\\n\\    output(\"a is greater than 10 or a is greater than 3\")\\nend if\\n\\nif (a>3) and (a<10) then\\n    output(\"a is greater than 3 and less than 10\")\\nend if')}>\n\t\t\t\t\t\t\tLogic\n\t\t\t\t\t\t</button>\n                        <button href=\"#\" class=\"block px-4 py-2 text-gray-800 hover:text-green-500 hover:font-bold\"\n                        onClick={() => this.guide('// What Hogwarts house do you belong to?\\n\\nlet house = \"Hufflepuff\"\\n\\nif house = \"Gryffindor\" then\\n    output \"Gryffindor\"\\nelse if house = \"Slytherin\" then\\n    output \"Slytherin\"\\nelse if house = \"Ravenclaw\" then\\n    output \"Ravenclaw\"\\nelse  then\\n    output \"Hufflepuff\"\\nend if')}>\n\t\t\t\t\t\t\tIf and Else\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button href=\"#\" class=\"block px-4 py-2 text-gray-800 hover:text-green-500 hover:font-bold\"\n                        onClick={() => this.guide(\"// Finding 10! (factorial)\\n\\nlet a = 1\\n\\nloop i from 1 to 10\\n    a = a*i\\nend loop\\n\\noutput a\")}>\n\t\t\t\t\t\t\tLoops\n\t\t\t\t\t\t</button>\n                        <button href=\"#\" class=\"block px-4 py-2 text-gray-800 hover:text-green-500 hover:font-bold\"\n                        onClick={() => this.guide('// Using modulus\\n\\nlet a = 17\\nif (a mod 2) = 1 then\\n    output(\"a is odd\")\\nelse then\\n    output(\"a is even\")\\nend if\\n\\n// Using div\\n\\nlet b = 96\\nlet c = 15\\nlet quotient = Math.floor(b/c)\\noutput(\"96 div is \"+quotient.toString())')}>\n\t\t\t\t\t\t\tMod and Div\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n                    <button className=\"border-green-500 border-2 hover:bg-transparent bg-green-500 py-3 px-8 rounded-full font-bold text-white hover:text-green-500 outline-none\" onClick={this.run}>Run</button>\n                </div>\n                <form className=\"body-div flex body-class bg-gray-900 bg-opacity-50\">    \n                    <textarea value={this.state.textAreaValue} onChange={this.handleChange} placeholder=\"// Enter your pseudocode here:\" className=\"mx-10 my-16 flex-1 bg-gray-900 p-5 text-white outline-none leading-relaxed\"onKeyDown={e => {\n   if ( e.key === 'Tab' && !e.shiftKey ) {\n   document.execCommand('insertText', false, \"\\t\");\n   e.preventDefault();\n   return false;\n}}}/>\n\n                    <div className=\"flex-1 mx-10 my-16 bg-gray-900 p-5 text-white\">\n                        {\n                            (this.state.output != null) ? <pre>{this.state.output}</pre> : null\n                        }\n                        {\n                            (this.state.error != null) ? <div className=\"text-red-500 break-words\">{this.state.error}</div> : null\n                        }\n                        \n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Main\n\n\n// Still to do:\n// Logo\n// Implementation of function\n// Error checking\n// Sample list"]},"metadata":{},"sourceType":"module"}