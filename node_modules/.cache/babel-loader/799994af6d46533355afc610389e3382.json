{"ast":null,"code":"var _jsxFileName = \"/Users/leostrijbos/Desktop/Files/School/IB Computer Science/Extended Essay/website/src/Pages/typing.js\";\nimport React from \"react\";\nimport Airtable from \"airtable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TypePage extends React.Component {\n  // Initialise state\n  constructor() {\n    super();\n    this.state = {\n      indexDown: 0,\n      indexUp: 0,\n      text: \"lorem ipsum dolor sit amet, consectetur adipiscing elit,\",\n      //text:\"lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n      //keystroke: Array(462).fill(0),\n      keystroke: Array(112).fill(0),\n      // Have to change when I change the sample text\n      timings: [0],\n      profile: \"\",\n      value: \"\",\n      numberDone: 0,\n      recordID: \"\",\n      id: \"\"\n    };\n    this.keyDown = this.keyDown.bind(this);\n    this.keyUp = this.keyUp.bind(this);\n    this.done = this.done.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.restart = this.restart.bind(this);\n    this.testTable = this.testTable.bind(this);\n    this.idManager = this.idManager.bind(this);\n  }\n\n  restart() {\n    this.setState({\n      timings: [0]\n    });\n    this.setState({\n      keystroke: Array(112).fill(0)\n    });\n    this.setState({\n      value: \"\"\n    });\n    this.setState({\n      indexUp: 0\n    });\n    this.setState({\n      indexDown: 0\n    });\n  } // Functions\n\n\n  done(keystroke) {\n    let timings = this.state.timings;\n    let numDone = this.state.numberDone;\n\n    for (let i = 1; i < keystroke.length; i++) {\n      let time = keystroke[i] - keystroke[i - 1];\n      timings.push(time);\n    }\n\n    console.log(timings);\n    this.setState({\n      numberDone: numDone + 1\n    });\n    this.restart();\n    Airtable.configure({\n      endpointUrl: 'https://api.airtable.com',\n      apiKey: 'keyZBa6Zue26Qd9BX'\n    });\n    var base = new Airtable({\n      apiKey: 'keyZBa6Zue26Qd9BX'\n    }).base('appwhIolXtHdjTzlL');\n    let colName = \"k\" + (numDone + 1).toString();\n    let pairings = [\"k1\", \"k2\", \"k3\", \"k4\", \"k5\", \"k6\", \"k7\", \"k8\", \"k9\", \"k10\", \"k11\", \"k12\", \"k13\", \"k14\", \"k15\", \"k16\", \"k17\", \"k18\", \"k19\", \"k20\"];\n    base('Main').update([{\n      \"id\": this.props.recordID,\n      \"fields\": {\n        \"NameID\": this.state.profile,\n        \"k1\": timings.toString()\n      }\n    }], function (err, records) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      records.forEach(function (record) {\n        console.log(record.getId());\n      });\n    }); // Check whether the maximum number of entries is done\n    // reset timings and keystroke\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  keyDown(event) {\n    let text = this.state.text;\n    let indexDown = this.state.indexDown;\n    let keystroke = this.state.keystroke;\n    let typed = String.fromCharCode(event.keyCode);\n\n    if (typed == \"\\b\") {\n      //this.setState({ indexDown:indexDown-1 })\n      event.preventDefault();\n    } else {\n      keystroke[2 * indexDown] = Date.now();\n      this.setState({\n        indexDown: indexDown + 1\n      });\n      this.setState({\n        keystroke: keystroke\n      });\n    }\n  }\n\n  keyUp(event) {\n    let text = this.state.text;\n    let indexUp = this.state.indexUp;\n    let keystroke = this.state.keystroke;\n    let typed = String.fromCharCode(event.keyCode);\n\n    if (typed == \"\\b\") {\n      //this.setState({ indexUp:indexUp-1 })\n      event.preventDefault();\n    } else {\n      keystroke[2 * indexUp + 1] = Date.now();\n      this.setState({\n        indexUp: indexUp + 1\n      });\n      this.setState({\n        keystroke: keystroke\n      });\n    }\n\n    if (indexUp > (keystroke.length - 4) / 2) {\n      console.log(\"Done typing\");\n      this.done(keystroke); //console.log(keystroke)\n    }\n  }\n\n  componentDidMount() {\n    let profile = this.props.profile;\n    this.setState({\n      profile: profile\n    });\n    this.testTable();\n  }\n\n  testTable() {\n    var Airtable = require('airtable');\n\n    var base = new Airtable({\n      apiKey: 'keyZBa6Zue26Qd9BX'\n    }).base('appwhIolXtHdjTzlL');\n    base('Main').select({\n      view: \"Grid view\"\n    }).eachPage(function page(records, fetchNextPage) {\n      // This function (`page`) will get called for each page of records.\n      records.forEach(function (record) {\n        console.log('Retrieved', record.get('NameID'));\n        console.log(\"retrieved id\", record.id);\n        idManager(record.id);\n        console.log(\"is this what caused the error?\");\n      }); // To fetch the next page of records, call `fetchNextPage`.\n      // If there are more records, `page` will get called again.\n      // If there are no more records, `done` will get called.\n\n      fetchNextPage();\n    }, function done(err) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n    });\n  }\n\n  idManager(value) {\n    console.log(\"id manager\");\n    this.setState({\n      id: value\n    });\n    console.log(\"no error\");\n    console.log(\"id is now\", value);\n  } // UI\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen flex h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-auto w-1/2 h-3/5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex my-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-gray-500 hover:text-gray-400 font-normal hover:underline\",\n            onClick: this.props.handler,\n            children: \"\\u2190 Return\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-96 flex-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-blue-500 font-bold hover:text-blue-400\",\n            onClick: this.restart,\n            children: \"Restart?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"border-t-1 w-full mt-2 mb-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-lg \",\n          children: \"Please type out the following extract:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-5  text-gray-500 border-l-2 py-3 my-5 border-blue-500\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-xs my-2\",\n          children: \"Don't worry about making mistakes. Just keep typing normally!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"\",\n          id: \"\",\n          placeholder: \"Start typing...\",\n          onChange: this.handleChange,\n          onKeyDown: this.keyDown,\n          onKeyUp: this.keyUp,\n          className: \"border-2 w-full p-3 outline-none whitespace-normal\",\n          value: this.state.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-xs my-2\",\n          children: [\"Done \", this.state.numberDone, \"/20\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TypePage;","map":{"version":3,"sources":["/Users/leostrijbos/Desktop/Files/School/IB Computer Science/Extended Essay/website/src/Pages/typing.js"],"names":["React","Airtable","TypePage","Component","constructor","state","indexDown","indexUp","text","keystroke","Array","fill","timings","profile","value","numberDone","recordID","id","keyDown","bind","keyUp","done","handleChange","restart","testTable","idManager","setState","numDone","i","length","time","push","console","log","configure","endpointUrl","apiKey","base","colName","toString","pairings","update","props","err","records","error","forEach","record","getId","event","target","typed","String","fromCharCode","keyCode","preventDefault","Date","now","componentDidMount","require","select","view","eachPage","page","fetchNextPage","get","render","handler"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Airtable from \"airtable\";\n\nclass TypePage extends React.Component{\n    // Initialise state\n    constructor() {\n        super();\n        this.state = {\n            indexDown:0,\n            indexUp:0,\n            text:\"lorem ipsum dolor sit amet, consectetur adipiscing elit,\",\n            //text:\"lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n            //keystroke: Array(462).fill(0),\n            keystroke: Array(112).fill(0), // Have to change when I change the sample text\n            timings:[0],\n            profile: \"\",\n            value:\"\",\n            numberDone:0,\n            recordID:\"\",\n            id: \"\",\n        };\n\n        this.keyDown = this.keyDown.bind(this)\n        this.keyUp = this.keyUp.bind(this)\n        this.done = this.done.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.restart = this.restart.bind(this)\n        this.testTable = this.testTable.bind(this)\n        this.idManager = this.idManager.bind(this)\n    }\n\n    restart() {\n        this.setState({ timings: [0] })\n        this.setState({ keystroke: Array(112).fill(0) })\n        this.setState({ value:\"\" })\n        this.setState({ indexUp:0 })\n        this.setState({ indexDown:0 })\n    }\n\n    // Functions\n    done(keystroke){\n        let timings = this.state.timings\n        let numDone = this.state.numberDone\n\n        for (let i=1; i<keystroke.length;i++) {\n            let time = keystroke[i]-keystroke[i-1]\n            timings.push(time)\n        }\n\n        console.log(timings)\n        this.setState({ numberDone: numDone+1 })\n        this.restart()\n\n        Airtable.configure({\n            endpointUrl: 'https://api.airtable.com',\n            apiKey: 'keyZBa6Zue26Qd9BX'\n        });\n        var base = new Airtable({apiKey: 'keyZBa6Zue26Qd9BX'}).base('appwhIolXtHdjTzlL');\n        let colName = \"k\"+(numDone+1).toString()\n        let pairings = [\"k1\",\"k2\",\"k3\",\"k4\",\"k5\",\"k6\",\"k7\",\"k8\",\"k9\",\"k10\",\"k11\",\"k12\",\"k13\",\"k14\",\"k15\",\"k16\",\"k17\",\"k18\",\"k19\",\"k20\",]\n\n        base('Main').update([\n            {\n                \"id\": this.props.recordID,\n                \"fields\": {\n                    \"NameID\": this.state.profile,\n                    \"k1\": timings.toString()\n                }\n            }\n          ], function(err, records) {\n            if (err) {\n              console.error(err);\n              return;\n            }\n            records.forEach(function (record) {\n              console.log(record.getId());\n            });\n          });\n        \n\n        // Check whether the maximum number of entries is done\n        // reset timings and keystroke\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value })\n    }\n\n    keyDown(event){\n\n        let text = this.state.text\n        let indexDown = this.state.indexDown\n        let keystroke = this.state.keystroke\n\n\n        let typed = String.fromCharCode(event.keyCode)\n\n        if (typed == \"\\b\") {\n            //this.setState({ indexDown:indexDown-1 })\n            event.preventDefault()\n        } else {\n            keystroke[2*indexDown] = Date.now()\n\n            this.setState({ indexDown:indexDown+1 })\n            this.setState({ keystroke: keystroke })\n        }\n\n    }\n\n    keyUp(event){\n        let text = this.state.text\n        let indexUp = this.state.indexUp\n        let keystroke = this.state.keystroke\n\n        let typed = String.fromCharCode(event.keyCode)\n\n        if (typed == \"\\b\") {\n            //this.setState({ indexUp:indexUp-1 })\n            event.preventDefault()\n        } else {\n            keystroke[2*indexUp+1] = Date.now()\n\n            this.setState({ indexUp:indexUp+1 })\n            this.setState({ keystroke: keystroke })\n        }\n\n        if (indexUp > ((keystroke.length -4)/2)) {\n            console.log(\"Done typing\")\n            this.done(keystroke)\n            \n            //console.log(keystroke)\n        }\n\n    }\n\n    componentDidMount() {\n        let profile = this.props.profile\n        this.setState({ profile: profile })\n\n        this.testTable()\n    }\n\n    testTable() {\n        var Airtable = require('airtable');\n        var base = new Airtable({apiKey: 'keyZBa6Zue26Qd9BX'}).base('appwhIolXtHdjTzlL');\n\n        base('Main').select({\n            view: \"Grid view\"\n        }).eachPage(function page(records, fetchNextPage) {\n            // This function (`page`) will get called for each page of records.\n\n            records.forEach(function(record) {\n                console.log('Retrieved', record.get('NameID'));\n                console.log(\"retrieved id\", record.id)\n                idManager(record.id)\n                console.log(\"is this what caused the error?\")\n            });\n\n            // To fetch the next page of records, call `fetchNextPage`.\n            // If there are more records, `page` will get called again.\n            // If there are no more records, `done` will get called.\n            fetchNextPage();\n\n        }, function done(err) {\n            if (err) { console.error(err); return; }\n        });\n    }\n    \n    idManager(value) {\n        console.log(\"id manager\")\n        this.setState({ id: value })\n        console.log(\"no error\")\n        console.log(\"id is now\", value)\n    }\n\n    // UI\n    render(){\n        return(\n            <div className=\"w-screen flex h-screen\">\n                <div className=\"m-auto w-1/2 h-3/5\">\n                    <div className=\"flex my-3\">\n                        <button className=\"text-gray-500 hover:text-gray-400 font-normal hover:underline\" onClick={this.props.handler}>← Return</button>\n                        <div className=\"w-96 flex-1\"></div>\n                        <button className=\"text-blue-500 font-bold hover:text-blue-400\" onClick={this.restart}>Restart?</button>\n                    </div>\n                    <hr className=\"border-t-1 w-full mt-2 mb-8\"></hr>\n                    <p className=\"font-bold text-lg \">Please type out the following extract:</p>\n                    \n                    <div className=\"px-5  text-gray-500 border-l-2 py-3 my-5 border-blue-500\">\n                        <p>{this.state.text}</p>\n                    </div>\n                    <p className=\"text-gray-500 text-xs my-2\">Don't worry about making mistakes. Just keep typing normally!</p>\n                    \n                    <input type=\"text\" name=\"\" id=\"\" placeholder=\"Start typing...\" onChange={this.handleChange} onKeyDown={this.keyDown} onKeyUp={this.keyUp} className=\"border-2 w-full p-3 outline-none whitespace-normal\" value={this.state.value}/>\n                    <p className=\"text-gray-500 text-xs my-2\">Done {this.state.numberDone}/20</p>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default TypePage\n"]},"metadata":{},"sourceType":"module"}