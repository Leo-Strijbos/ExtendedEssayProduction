{"ast":null,"code":"var _jsxFileName = \"/Users/leostrijbos/Desktop/Files/School/IB Computer Science/Extended Essay/website/src/Pages/typing.js\";\nimport React from \"react\";\nimport Airtable from \"airtable\";\nimport update from \"../components/update\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TypePage extends React.Component {\n  // Initialise state\n  constructor() {\n    super();\n    this.state = {\n      indexDown: 0,\n      indexUp: 0,\n      text: \"lorem ipsum dolor sit amet, consectetur adipiscing elit,\",\n      //text:\"lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n      //keystroke: Array(462).fill(0),\n      keystroke: Array(112).fill(0),\n      // Have to change when I change the sample text\n      timings: [0],\n      profile: \"\",\n      value: \"\",\n      numberDone: 0,\n      id: \"\",\n      finished: false\n    };\n    this.keyDown = this.keyDown.bind(this);\n    this.keyUp = this.keyUp.bind(this);\n    this.done = this.done.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.restart = this.restart.bind(this);\n    this.testTable = this.testTable.bind(this);\n    this.idManager = this.idManager.bind(this);\n    this.countManager = this.countManager.bind(this);\n  }\n\n  restart() {\n    this.setState({\n      timings: [0]\n    });\n    this.setState({\n      keystroke: Array(112).fill(0)\n    });\n    this.setState({\n      value: \"\"\n    });\n    this.setState({\n      indexUp: 0\n    });\n    this.setState({\n      indexDown: 0\n    });\n  } // Functions\n\n\n  done(keystroke) {\n    let timings = this.state.timings;\n    let numDone = this.state.numberDone;\n\n    for (let i = 1; i < keystroke.length; i++) {\n      let time = keystroke[i] - keystroke[i - 1];\n      timings.push(time);\n    }\n\n    console.log(timings);\n    this.setState({\n      numberDone: numDone + 1\n    });\n    this.restart();\n    Airtable.configure({\n      endpointUrl: 'https://api.airtable.com',\n      apiKey: 'keyZBa6Zue26Qd9BX'\n    });\n    var base = new Airtable({\n      apiKey: 'keyZBa6Zue26Qd9BX'\n    }).base('appwhIolXtHdjTzlL');\n    let id = this.state.id;\n    console.log(update(this.state.profile, numDone + 1, timings.toString(), id));\n    base('Main').update([update(this.state.profile, numDone + 1, timings.toString(), id)], function (err, records) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n\n      records.forEach(function (record) {\n        console.log(record.getId());\n      });\n    }); // Check whether the maximum number of entries is done\n    // reset timings and keystroke\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  keyDown(event) {\n    let text = this.state.text;\n    let indexDown = this.state.indexDown;\n    let keystroke = this.state.keystroke;\n    let typed = String.fromCharCode(event.keyCode);\n\n    if (typed == \"\\b\") {\n      event.preventDefault();\n    } else {\n      keystroke[2 * indexDown] = Date.now();\n      this.setState({\n        indexDown: indexDown + 1\n      });\n      this.setState({\n        keystroke: keystroke\n      });\n    }\n  }\n\n  keyUp(event) {\n    let text = this.state.text;\n    let indexUp = this.state.indexUp;\n    let keystroke = this.state.keystroke;\n    let typed = String.fromCharCode(event.keyCode);\n\n    if (typed == \"\\b\") {\n      event.preventDefault();\n    } else {\n      keystroke[2 * indexUp + 1] = Date.now();\n      this.setState({\n        indexUp: indexUp + 1\n      });\n      this.setState({\n        keystroke: keystroke\n      });\n    }\n\n    if (indexUp > (keystroke.length - 4) / 2) {\n      console.log(\"Done typing\");\n      this.done(keystroke);\n    }\n  }\n\n  componentDidMount() {\n    let profile = this.props.profile;\n    this.setState({\n      profile: profile\n    });\n    this.testTable();\n  }\n\n  testTable() {\n    var Airtable = require('airtable');\n\n    var base = new Airtable({\n      apiKey: 'keyZBa6Zue26Qd9BX'\n    }).base('appwhIolXtHdjTzlL');\n    base('Main').select({\n      view: \"Grid view\"\n    }).eachPage((records, fetchNextPage) => {\n      // This function (`page`) will get called for each page of records.\n      records.forEach(record => {\n        if (record.get('NameID') == this.state.profile) {\n          this.idManager(record.id);\n          let left = true;\n          let counter = 1;\n\n          while (left) {\n            let col = \"k\" + counter.toString();\n\n            if (record.get(col) != undefined) {\n              counter += 1;\n            } else {\n              left = false;\n            }\n          }\n\n          this.countManager(counter - 1);\n        }\n      });\n      fetchNextPage();\n    }, function done(err) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n    });\n  }\n\n  idManager(value) {\n    this.setState({\n      id: value\n    });\n    console.log(\"id is now\", value);\n  }\n\n  countManager(value) {\n    this.setState({\n      numberDone: value\n    });\n    console.log(\"number done is now\", value);\n\n    if (value >= 20) {\n      this.setState({\n        finished: true\n      });\n    }\n  } // UI\n\n\n  render() {\n    if (this.state.finished == false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-screen flex h-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-auto w-1/2 h-3/5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex my-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-gray-500 hover:text-gray-400 font-normal hover:underline\",\n              onClick: this.props.handler,\n              children: \"\\u2190 Return\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-96 flex-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-blue-500 font-bold hover:text-blue-400\",\n              onClick: this.restart,\n              children: \"Restart?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border-t-1 w-full mt-2 mb-8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold text-lg \",\n            children: \"Please type out the following extract:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-5  text-gray-500 border-l-2 py-3 my-5 border-blue-500\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.state.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-xs my-2\",\n            children: \"Don't worry about making mistakes. Just keep typing normally! Feel free to reset if you need to.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"\",\n            id: \"\",\n            placeholder: \"Start typing...\",\n            onChange: this.handleChange,\n            onKeyDown: this.keyDown,\n            onKeyUp: this.keyUp,\n            className: \"border-2 w-full p-3 outline-none whitespace-normal\",\n            value: this.state.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-xs my-2\",\n            children: [\"Done \", this.state.numberDone, \"/20\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-screen flex h-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-auto w-1/2 h-3/5 p-5 border-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl font-bold text-blue-500\",\n            children: \"You're done! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border-t-1 w-full mt-2 mb-8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Thank you so much for taking the time to help out. You've submitted 20/20 keystroke samples, so you're finished.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-auto h-1/2 w-1/2 mt-56\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-9xl text-center\",\n              children: \" \\uD83E\\uDD47 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \" text-center text-sm text-gray-500\",\n              children: \"MVP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default TypePage; // Still to do:\n// Create a landing page with some simple instructions\n// Choose a good length of text to be typed\n// Change logo, and name inside the navigation bar of chrome","map":{"version":3,"sources":["/Users/leostrijbos/Desktop/Files/School/IB Computer Science/Extended Essay/website/src/Pages/typing.js"],"names":["React","Airtable","update","TypePage","Component","constructor","state","indexDown","indexUp","text","keystroke","Array","fill","timings","profile","value","numberDone","id","finished","keyDown","bind","keyUp","done","handleChange","restart","testTable","idManager","countManager","setState","numDone","i","length","time","push","console","log","configure","endpointUrl","apiKey","base","toString","err","records","error","forEach","record","getId","event","target","typed","String","fromCharCode","keyCode","preventDefault","Date","now","componentDidMount","props","require","select","view","eachPage","fetchNextPage","get","left","counter","col","undefined","render","handler"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Airtable from \"airtable\";\nimport update from \"../components/update\";\n\nclass TypePage extends React.Component{\n    // Initialise state\n    constructor() {\n        super();\n        this.state = {\n            indexDown:0,\n            indexUp:0,\n            text:\"lorem ipsum dolor sit amet, consectetur adipiscing elit,\",\n            //text:\"lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n            //keystroke: Array(462).fill(0),\n            keystroke: Array(112).fill(0), // Have to change when I change the sample text\n            timings:[0],\n            profile: \"\",\n            value:\"\",\n            numberDone:0,\n            id: \"\",\n            finished: false\n        };\n\n        this.keyDown = this.keyDown.bind(this)\n        this.keyUp = this.keyUp.bind(this)\n        this.done = this.done.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.restart = this.restart.bind(this)\n        this.testTable = this.testTable.bind(this)\n        this.idManager = this.idManager.bind(this)\n        this.countManager = this.countManager.bind(this)\n    }\n\n    restart() {\n        this.setState({ timings: [0] })\n        this.setState({ keystroke: Array(112).fill(0) })\n        this.setState({ value:\"\" })\n        this.setState({ indexUp:0 })\n        this.setState({ indexDown:0 })\n    }\n\n    // Functions\n    done(keystroke){\n        let timings = this.state.timings\n        let numDone = this.state.numberDone\n\n        for (let i=1; i<keystroke.length;i++) {\n            let time = keystroke[i]-keystroke[i-1]\n            timings.push(time)\n        }\n\n        console.log(timings)\n        this.setState({ numberDone: numDone+1 })\n        this.restart()\n\n        Airtable.configure({\n            endpointUrl: 'https://api.airtable.com',\n            apiKey: 'keyZBa6Zue26Qd9BX'\n        });\n        var base = new Airtable({apiKey: 'keyZBa6Zue26Qd9BX'}).base('appwhIolXtHdjTzlL');\n        let id = this.state.id\n\n        console.log(update(this.state.profile, numDone+1, timings.toString(), id))\n        \n        base('Main').update([\n            update(this.state.profile, numDone+1, timings.toString(), id),\n          ], function(err, records) {\n            if (err) {\n              console.error(err);\n              return;\n            }\n            records.forEach(function (record) {\n              console.log(record.getId());\n            });\n          });\n        \n\n        // Check whether the maximum number of entries is done\n        // reset timings and keystroke\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value })\n    }\n\n    keyDown(event){\n\n        let text = this.state.text\n        let indexDown = this.state.indexDown\n        let keystroke = this.state.keystroke\n\n\n        let typed = String.fromCharCode(event.keyCode)\n\n        if (typed == \"\\b\") {\n            event.preventDefault()\n        } else {\n            keystroke[2*indexDown] = Date.now()\n\n            this.setState({ indexDown:indexDown+1 })\n            this.setState({ keystroke: keystroke })\n        }\n\n    }\n\n    keyUp(event){\n        let text = this.state.text\n        let indexUp = this.state.indexUp\n        let keystroke = this.state.keystroke\n\n        let typed = String.fromCharCode(event.keyCode)\n\n        if (typed == \"\\b\") {\n            event.preventDefault()\n        } else {\n            keystroke[2*indexUp+1] = Date.now()\n\n            this.setState({ indexUp:indexUp+1 })\n            this.setState({ keystroke: keystroke })\n        }\n\n        if (indexUp > ((keystroke.length -4)/2)) {\n            console.log(\"Done typing\")\n            this.done(keystroke)\n        }\n\n    }\n\n    componentDidMount() {\n        let profile = this.props.profile\n        this.setState({ profile: profile })\n\n        this.testTable()\n\n    }\n\n    testTable() {\n        var Airtable = require('airtable');\n        var base = new Airtable({apiKey: 'keyZBa6Zue26Qd9BX'}).base('appwhIolXtHdjTzlL');\n\n        base('Main').select({\n            view: \"Grid view\"\n        }).eachPage((records, fetchNextPage) => {\n            // This function (`page`) will get called for each page of records.\n\n            records.forEach((record) => {\n\n                if (record.get('NameID') == this.state.profile) {\n                    this.idManager(record.id)\n                    let left = true\n                    let counter = 1\n\n                    while (left) {\n                        let col = \"k\"+counter.toString()\n                        if (record.get(col) != undefined) {\n                            counter += 1\n                        } else {\n                            left = false\n                        }\n                    }\n\n                    this.countManager(counter-1)\n                }\n                \n            });\n\n            fetchNextPage();\n\n        }, function done(err) {\n            if (err) { console.error(err); return; }\n        });\n    }\n    \n    idManager(value) {\n        this.setState({ id: value })\n        console.log(\"id is now\", value)\n    }\n\n    countManager(value) {\n        this.setState({ numberDone: value })\n        console.log(\"number done is now\", value)\n\n        if (value >= 20) {\n            this.setState({ finished: true })\n        }\n    }\n\n    // UI\n    render(){\n        if (this.state.finished == false) {\n            return(\n                <div className=\"w-screen flex h-screen\">\n                    <div className=\"m-auto w-1/2 h-3/5\">\n                        <div className=\"flex my-3\">\n                            <button className=\"text-gray-500 hover:text-gray-400 font-normal hover:underline\" onClick={this.props.handler}>← Return</button>\n                            <div className=\"w-96 flex-1\"></div>\n                            <button className=\"text-blue-500 font-bold hover:text-blue-400\" onClick={this.restart}>Restart?</button>\n                        </div>\n                        <hr className=\"border-t-1 w-full mt-2 mb-8\"></hr>\n                        <p className=\"font-bold text-lg \">Please type out the following extract:</p>\n                        \n                        <div className=\"px-5  text-gray-500 border-l-2 py-3 my-5 border-blue-500\">\n                            <p>{this.state.text}</p>\n                        </div>\n                        <p className=\"text-gray-500 text-xs my-2\">Don't worry about making mistakes. Just keep typing normally! Feel free to reset if you need to.</p>\n                        \n                        <input type=\"text\" name=\"\" id=\"\" placeholder=\"Start typing...\" onChange={this.handleChange} onKeyDown={this.keyDown} onKeyUp={this.keyUp} className=\"border-2 w-full p-3 outline-none whitespace-normal\" value={this.state.value}/>\n                        <p className=\"text-gray-500 text-xs my-2\">Done {this.state.numberDone}/20</p>\n                        \n                    </div>\n                    \n                </div>\n            )\n        } else {\n            return(\n                <div className=\"w-screen flex h-screen\">\n                    <div className=\"m-auto w-1/2 h-3/5 p-5 border-2\">\n                        <p className=\"text-2xl font-bold text-blue-500\">You're done! </p>\n                        <hr className=\"border-t-1 w-full mt-2 mb-8\"></hr>\n                        <p>Thank you so much for taking the time to help out. You've submitted 20/20 keystroke samples, so you're finished.</p>\n                        <div className=\"m-auto h-1/2 w-1/2 mt-56\">\n                            <p className=\"text-9xl text-center\"> 🥇 </p>\n                            <p className=\" text-center text-sm text-gray-500\">MVP</p>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default TypePage\n\n\n// Still to do:\n// Create a landing page with some simple instructions\n// Choose a good length of text to be typed\n// Change logo, and name inside the navigation bar of chrome"]},"metadata":{},"sourceType":"module"}